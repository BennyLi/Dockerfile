# Generic startup file.
user www-data;

# ususally equal to number of CPU's you have. run command "grep processor /proc/cpuinfo | wc -l" to find it
worker_processes 1; 

error_log /var/log/nginx/error.log; 
pid /var/run/nginx.pid;

# Keeps the logs free of messages about not being able to bind(). 
#daemon off;

events {
	worker_connections 1024;
}

http {
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
#	ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
	ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';

	rewrite_log 	on;
	access_log /var/log/nginx/access.log;

	include 	mime.types;
	default_type 	application/octet-stream;

	sendfile on;
#	tcp_nopush on;
	keepalive_timeout 3;
#	tcp_nodelay on; 

#	gzip on;

        # php max upload limit cannot be larger than this
	client_max_body_size 13m;

	index index.php index.html index.htm;

	# Upstream to abstract backend connection(s) for PHP.
	upstream php {
                # this should match value of "listen" directive in php-fpm pool
		server unix:/var/run/php5-fpm.sock;
	}

	include sites-enabled/*;
}
